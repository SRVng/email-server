name: Rust

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:      
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v3
    - name: Format
      run: cargo fmt
    - name: Cache cargo registry
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: cargo-build-cache    
    - name: Build
      run: cargo build --verbose --release
    - name: Run tests
      run: cargo test --verbose --release
  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
    - uses: actions/checkout@v3
    - name: Cache cargo registry
      uses: actions/cache@v3
      continue-on-error: false
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: cargo-build-cache
    - uses: aws-actions/setup-sam@v2
      with:
        use-installer: true
    - name: Setup cargo-lambda
      run: pip3 install cargo-lambda
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::095213111338:role/GithubOIDCDeploy
        aws-region: ap-southeast-1
    - name: Create .env
      run: aws ssm get-parameters --name="$SSM_NAME" --query Parameters[0].Value | xargs printf > .env
      env:
        SSM_NAME: ${{ secrets.SSM_NAME }}    
    - name: Release lambda with cargo-lambda
      run: |
        cargo lambda build
        cargo clean
        cargo lambda deploy --enable-function-url --s3-bucket rust-email-server